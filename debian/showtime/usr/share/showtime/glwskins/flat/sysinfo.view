#import "info_include.view"

widget(container_x, {
  widget(container_z, {
    widget(quad, {
      alpha: 0.9;
      color: 0;
    });
    widget(container_y, {
      padding: 1em;
      widget(table, {

        widget(container_y, {

          InfoLine(_("Version"), $core.app.version);

          InfoLine(_("Framerate"),
                   fmt("%2.2f Hz", $ui.framerate));
          InfoLine(_("System Total"),
                   fmt("%d kB", $core.system.mem.systotal),
                   isVoid($core.system.mem.systotal));
          InfoLine(_("System Free"),
                   fmt("%d kB", $core.system.mem.sysfree),
                   isVoid($core.system.mem.sysfree));
          InfoLine(_("Memory usage"),
                   fmt("%d kB", $core.system.mem.activeMem),
                   isVoid($core.system.mem.activeMem));
          InfoLine(_("Inactive memory"),
                   fmt("%d kB", $core.system.mem.inactiveMem),
                   isVoid($core.system.mem.inactiveMem));
          InfoLine(_("Fragmentation"),
                   fmt("%d", $core.system.mem.unusedChunks),
	           isVoid($core.system.mem.unusedChunks));
          InfoLine(_("VM Page In/Out"),
                   fmt("%d / %d",
                       $core.system.mem.pagein,
                       $core.system.mem.pageout),
	           !$core.system.mem.vmstat);
          InfoLine(_("CPU Temp"),
                   fmt("%d°C", $core.system.temp.cpu),
	           isVoid($core.system.temp.cpu));
          InfoLine(_("GPU Temp"),
                   fmt("%d°C", $core.system.temp.gpu),
	           isVoid($core.system.temp.gpu));
          InfoLine(_("HDD Avail"),
                   fmt("%.1f / %.1f GB", $core.system.hdd.avail,
                       $core.system.hdd.size),
	           isVoid($core.system.hdd.avail));
          InfoLine(_("Network"),
                   select($core.net.connectivity,
                          _("Connected"),
                          _("Not available")));
          cloner($core.net.interfaces, container_z, {
            InfoLine(_("IP Address"), fmt("%s - %s",
                                          $self.ipv4_addr, $self.name));
          });
          cloner($core.system.cpuinfo.cpus, container_z, {
            InfoBar($self.name, $self.load)
          });
        });
      });
    });
  });
});
